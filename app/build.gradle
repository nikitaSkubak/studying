plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-android-extensions'
    id 'kotlin-kapt'
    id 'androidx.navigation.safeargs.kotlin'
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.2"

    buildFeatures{
        dataBinding true
    }

    defaultConfig {
        applicationId "com.example.testapplication"
        minSdkVersion 26
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.incremental":"true"]
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    testOptions.unitTests {
        includeAndroidResources = true
        returnDefaultValues = true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.2.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutinesVersion"

    //dagger
    def dagger = "2.27"
    implementation "com.google.dagger:dagger:${dagger}"
    kapt "com.google.dagger:dagger-compiler:${dagger}"
    implementation "com.google.dagger:dagger-android:${dagger}"
    implementation "com.google.dagger:dagger-android-support:${dagger}"
    kapt "com.google.dagger:dagger-android-processor:${dagger}"
    kaptTest "com.google.dagger:dagger-compiler:${dagger}"

    //room
    def roomVersion = "2.2.5"
    implementation "androidx.room:room-runtime:$roomVersion"
    implementation "androidx.room:room-rxjava2:$roomVersion"
    kapt "androidx.room:room-compiler:$roomVersion"

    // Room persistence lib
    implementation "android.arch.persistence.room:runtime:$roomVersion"
    kapt "android.arch.persistence.room:compiler:$roomVersion"

    // stetho
    implementation "com.facebook.stetho:stetho:1.5.1"
    implementation "com.facebook.stetho:stetho-okhttp3:1.5.0"

    //lifecycle components
    implementation "android.arch.lifecycle:extensions:$rootProject.archLifecycleVersion"
    kapt "android.arch.lifecycle:compiler:$rootProject.archLifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-extensions:2.2.0"
    kapt "androidx.lifecycle:lifecycle-compiler:2.3.0-beta01"

    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'com.android.volley:volley:1.1.1'
    implementation 'com.google.code.gson:gson:2.8.5'


    // RxJava
    def rxAndroidVersion = "2.1.0"
    def rxJavaVersion = "2.2.9"
    def rxKotlinVersion = "2.2.0"
    implementation "io.reactivex.rxjava2:rxandroid:${rxAndroidVersion}"
    implementation "io.reactivex.rxjava2:rxjava:${rxJavaVersion}"
    implementation "io.reactivex.rxjava2:rxkotlin:${rxKotlinVersion}"

//network
    implementation "com.squareup.okhttp3:okhttp:3.10.0"
    implementation "com.squareup.okhttp3:logging-interceptor:3.10.0"
    implementation "com.squareup.retrofit2:retrofit:2.4.0"
    implementation "com.squareup.retrofit2:adapter-rxjava2:2.4.0"
    implementation "com.squareup.retrofit2:converter-gson:2.4.0"
    implementation "org.jetbrains.kotlin:kotlin-reflect:1.4.0"

    //navigation component
    def nav_version = "2.3.1"
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"
    // Feature module Support
    implementation "androidx.navigation:navigation-dynamic-features-fragment:$nav_version"
    // Testing Navigation
    androidTestImplementation "androidx.navigation:navigation-testing:$nav_version"
    // Jetpack Compose Integration
    implementation "androidx.navigation:navigation-compose:1.0.0-alpha02"

    // for testing
    implementation "androidx.test:monitor:1.3.0"
    testImplementation "androidx.test:core-ktx:$androidXTestCoreVersion"
    // AndroidX Test - Instrumented testing
    androidTestImplementation 'androidx.test:core:1.1.0'
    androidTestImplementation "androidx.test:runner:1.2.0"
    androidTestImplementation "junit:junit:$junitVersion"
    androidTestImplementation 'org.mockito:mockito-android:2.24.5'
    androidTestImplementation "androidx.test.espresso:espresso-core:$espressoCoreVersion"
    androidTestImplementation "androidx.test.ext:junit:$androidXTestExtKotlinRunnerVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espressoVersion"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:$espressoVersion"
    androidTestImplementation "androidx.arch.core:core-testing:$archTestingVersion"
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutinesVersion"

    //ui testing
    implementation "androidx.fragment:fragment-ktx:1.2.5"
    debugImplementation "androidx.fragment:fragment-testing:$fragmentVersion"
    debugImplementation("androidx.test:core:1.2.0")
    testImplementation "androidx.test.ext:junit:$junit4Version"
    testImplementation "io.mockk:mockk:$mockkVersion"
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:$mockitoVersion"
    testImplementation "org.powermock:powermock-mockito-release-full:1.6.0"
    testImplementation "org.mockito:mockito-inline:2.13.0"
    testImplementation "android.arch.core:core-testing:2.1.0"
    testImplementation "com.google.truth:truth:$googleTruthVersion"
    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.4.2'
    implementation "androidx.test.espresso:espresso-idling-resource:$espressoVersion"
}